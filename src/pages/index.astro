---
import "../styles/global.css";
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content="Portfolio de Ismael" />
		<title>ismola.dev</title>
	</head>
	<body>
		<!-- Fondo de código aleatorio -->
		<canvas id="code-bg-canvas"></canvas>
		<main>
			<div
				class="w-screen h-screen bg-amber-400 flex justify-center items-center flex-col"
			>
				<div class="text-3xl text-black font-bold text-center">
					Esto está en obras ⚒️
				</div>
				<div class="mt-6 text-center">
					<p class="text-lg text-black font-semibold mb-4">
						Pero puedes echar un vistazo a mis redes:
					</p>
					<div class="flex justify-center gap-6 text-black text-3xl">
						<a
							href="https://www.linkedin.com/in/ismatrevi"
							target="_blank"
							aria-label="LinkedIn"
							class="hover:text-gray-800 transition"
						>
							<svg
								xmlns="http://www.w3.org/2000/svg"
								width="24"
								height="24"
								viewBox="0 0 24 24"
								fill="none"
								stroke="currentColor"
								stroke-width="2"
								stroke-linecap="round"
								stroke-linejoin="round"
								class="lucide lucide-linkedin-icon lucide-linkedin"
								><path
									d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"
								></path><rect width="4" height="12" x="2" y="9"
								></rect><circle cx="4" cy="4" r="2"
								></circle></svg
							>
						</a>
						<a
							href="https://github.com/ismola"
							target="_blank"
							aria-label="GitHub"
							class="hover:text-gray-800 transition"
						>
							<svg
								xmlns="http://www.w3.org/2000/svg"
								width="24"
								height="24"
								viewBox="0 0 24 24"
								fill="none"
								stroke="currentColor"
								stroke-width="2"
								stroke-linecap="round"
								stroke-linejoin="round"
								class="lucide lucide-github-icon lucide-github"
								><path
									d="M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4"
								></path><path d="M9 18c-4.51 2-5-2-7-2"
								></path></svg
							>
						</a>
					</div>
					<!-- Añadido: invitación a enviar correo -->
					<div class="mt-8 flex flex-col items-center">
						<p class="text-lg text-black font-semibold mb-2">
							¿Prefieres escribirme?
						</p>
						<a
							href="mailto:code@ismola.dev"
							class="inline-flex items-center gap-2 px-4 py-2 bg-black text-amber-400 rounded-lg font-bold text-lg hover:bg-gray-900 transition"
							aria-label="Enviar correo a code@ismola.dev"
						>
							<svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
								<rect x="2" y="5" width="20" height="14" rx="2" />
								<path d="M22 5 12 13 2 5" />
							</svg>
							code@ismola.dev
						</a>
					</div>
				</div>
			</div>
		</main>
		<!-- Script para el fondo animado de código -->
		<script>
		(function() {
			const canvas = document.getElementById('code-bg-canvas') as HTMLCanvasElement;
			const ctx = canvas.getContext('2d');
			let width: number, height: number, columns: number, fontSize: number, codeLines: number[];
			const chars = 'const let function return if else for while () {} [] = + - * / < > ; : . , " \' 0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
			// Filtrar caracteres vacíos (espacios)
			const charArr = chars.split('').filter(c => c.trim().length > 0);
			let columnChars: string[] = [];
			let charTimers: number[] = [];
			const charChangeDelay = 6; // Cuantos frames esperar antes de cambiar la letra (más alto = más lento)

			function resize() {
				width = window.innerWidth;
				height = window.innerHeight;
				canvas.width = width;
				canvas.height = height;
				fontSize = 22; // Más pequeño para más densidad
				columns = Math.floor(width / fontSize);
				codeLines = Array.from({length: columns}, () => Math.random() * height);
				// Inicializar arrays para letras y temporizadores
				columnChars = Array.from({length: columns}, () => charArr[Math.floor(Math.random() * charArr.length)]);
				charTimers = Array.from({length: columns}, () => Math.floor(Math.random() * charChangeDelay));
			}

			function draw() {
				if (!ctx) return;
				ctx.clearRect(0, 0, width, height);
				ctx.globalAlpha = 0.22; // Opacidad más visible
				ctx.font = `${fontSize}px monospace`;
				ctx.fillStyle = '#92400e'; // Ámbar más oscuro para mejor contraste
				for (let i = 0; i < columns; i++) {
					// Cambiar la letra solo si el temporizador llega a 0
					if (charTimers[i] <= 0) {
						columnChars[i] = charArr[Math.floor(Math.random() * charArr.length)];
						charTimers[i] = charChangeDelay;
					} else {
						charTimers[i]--;
					}
					const text = columnChars[i];
					ctx.fillText(text, i * fontSize, codeLines[i]);
					if (codeLines[i] > height && Math.random() > 0.975) {
						codeLines[i] = 0;
					} else {
						codeLines[i] += fontSize;
					}
				}
			}

			resize();
			window.addEventListener('resize', resize);
			canvas.style.position = 'fixed';
			canvas.style.top = "0";
			canvas.style.left = "0";
			canvas.style.width = '100vw';
			canvas.style.height = '100vh';
			canvas.style.zIndex = "0";
			canvas.style.pointerEvents = 'none';

			setInterval(draw, 60);
		})();
		</script>
	</body>
</html>
